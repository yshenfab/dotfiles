# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
# Powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

fastfetch # CLI system info

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Theme
# ZSH_THEME="powerlevel10k/powerlevel10k"
source /usr/local/opt/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Plugins
plugins=(zsh-autosuggestions sudo web-search copypath history git z.lua extract macos)

source $ZSH/oh-my-zsh.sh

# zsh-autosuggestions
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# z.lua
# source ~/.oh-my-zsh/custom/plugins/z.lua/z.lua.plugin.zsh
eval "$(lua ~/.oh-my-zsh/custom/plugins/z.lua/z.lua --init zsh enhanced)"

# User configuration
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# PATH
YANGBIN=$HOME/yangbin
export PATH=${YANGBIN}:$PATH
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/opt/qt/bin:$PATH"
export PATH="~/.local/bin:$PATH"
export GPG_TTY=$(tty)

# Aliases
alias ls='exa'
alias ll='exa -al'
alias lsd='ls -d *(-/DN)'
alias cat='bat'
alias du='du -sh'
# alias man='tldr'
# homebrew
alias bu='brew update && brew upgrade'
alias buc='brew cu -a'
# kitty
alias icat='kitty +kitten icat' # display image in terminal
alias d='kitty +kitten diff'
# ssh
# alias ssh-1080='ssh yang@10.16.12.102'
alias ssh-3090='ssh yang@10.16.11.108'
alias ssh-3090-2='ssh yang@10.16.12.103'
# alias ssh-tesla-k80='ssh yang@10.20.94.184'
# alias ssh-72='ssh yang@10.20.101.189'

# Proxy
# clash
export http_proxy=127.0.0.1:7890
export https_proxy=$http_proxy
export socks_proxy=127.0.0.1:7891

# v2ray
# export http_proxy=127.0.0.1:20171
# export https_proxy=$http_proxy
# export socks_proxy=127.0.0.1:20170

# Golang
export GO111MODULE=on
export GOPROXY=https://goproxy.cn
# export GOPROXY=https://mirrors.aliyun.com/goproxy/

# Stage
export STG=$HOME/stg
export DYLD_LIBRARY_PATH=$STG/lib
export PATH=$STG/bin:$PATH

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# homebrew (tuna)
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_PIP_INDEX_URL="https://pypi.tuna.tsinghua.edu.cn/simple"
# brew tap --custom-remote --force-auto-update homebrew/core https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git
# brew tap --custom-remote --force-auto-update homebrew/cask https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git

# homebrew (ustc)
# export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.ustc.edu.cn/brew.git"
# export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.ustc.edu.cn/homebrew-core.git"
# export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles"
# export HOMEBREW_API_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles/api"
# homebrew cask
# brew tap --custom-remote --force-auto-update homebrew/cask https://mirrors.ustc.edu.cn/homebrew-cask.git

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"

# zsh-syntax-highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
